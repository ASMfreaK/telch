{% extends "base.jinja2" %}

{% block extra_head %}
<style>
  .invisible-pre {
    background-color: unset;
    border: unset;
    border-radius: unset;
    padding: unset;
    margin: unset;
    white-space: pre-wrap;
  }
</style>
{% endblock %}

{% block content %}

<!-- search bar -->
<div class="row toolbar-pf" id='filter_toolbar'>
</div>

<div class="list-group list-view-pf list-view-pf-view" id="tasks">
</div>


</div>
<script>
  function filter_items(sock) {
    var filter_value = {
      'status': 'pending',
      'sortby': 'urgency',
      'sorted_reverse': true
    }
    sock.send(filter_value);
  }

  function set_item_scripts() {
    // matchHeight the contents of each .card-pf and then the .card-pf itself
    $(".row-cards-pf > [class*='col'] > .card-pf .card-pf-title").matchHeight();
    $(".row-cards-pf > [class*='col'] > .card-pf > .card-pf-body").matchHeight();
    $(".row-cards-pf > [class*='col'] > .card-pf > .card-pf-footer").matchHeight();
    $(".row-cards-pf > [class*='col'] > .card-pf").matchHeight();

    // click the list-view heading then expand a row
    $(".list-group-item-header").click(function(event){
      if(!$(event.target).is("button, a, input, .fa-ellipsis-v")){
        $(this).find(".fa-angle-right").toggleClass("fa-angle-down")
          .end().parent().toggleClass("list-view-pf-expand-active")
            .find(".list-group-item-container").toggleClass("hidden");
      } else {
      }
    })

    // click the close button, hide the expand row and remove the active status
    $(".list-group-item-container .close").on("click", function (){
      $(this).parent().addClass("hidden")
        .parent().removeClass("list-view-pf-expand-active")
          .find(".fa-angle-right").removeClass("fa-angle-down");
    })
  }

  function update_total_task_count(total){
    $('#total').text(total + ' results');
  }

  $(document).ready(function () {
    // toggle dropdown menu
    $('.list-view-pf-actions').on('show.bs.dropdown', function () {
      var $this = $(this);
      var $dropdown = $this.find('.dropdown');
      var space = $(window).height() - $dropdown[0].getBoundingClientRect().top - $this.find('.dropdown-menu').outerHeight(true);
      $dropdown.toggleClass('dropup', space < 10);
    });

    var tasks = 0;

    var sock = new WebSocket('ws://' + window.location.host + '{{ws_url}}')
      sock.onmessage = function(event) {
        try {
          dta = $.parseJSON(event.data);

          if ('end' in dta) {
            set_item_scripts()
            update_total_task_count(tasks);
            tasks = 0;
          } else if ('filter' in dta) {
            $("#filter_toolbar").empty();
            $("#filter_toolbar").append(dta.filter);
          } else if ('task' in dta) {
            $('#tasks').append(dta.task);
            tasks++;
          }
        } catch (e) {
          // Some unparsable json :/
        }
        
      };
      sock.onopen = function(){
        sock.send("ready");
      };
  });
</script>
{% endblock %}
